services:
  app:
    container_name: app
    hostname: app
    build:
      context: .
      dockerfile: src/app/Dockerfile
    restart: on-failure
    env_file:
      - ./src/app/.env
    environment:
      STORAGE_URI: "postgresql+asyncpg://admin:admin@postgres/db"
    ports:
      - 8000:8000
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    container_name: postgres
    hostname: postgres
    image: postgres:16.2-alpine3.19
    env_file:
      - ./postgres/.env
    ports:
      -  5432:5432
    volumes:
      - postgres:/var/lib/postgresql/data
      - ./postgres/migrations:/docker-entrypoint-initdb.d
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U admin -d db" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped

  clickhouse:
    image: clickhouse/clickhouse-server:24.3-alpine
    container_name: clickhouse
    hostname: clickhouse
    volumes:
      - ./clickhouse/config:/etc/clickhouse-server
      - ./clickhouse/migrations:/docker-entrypoint-initdb.d
      - clickhouse:/var/lib/clickhouse
    ports:
      - 8123:8123  # HTTP API
      - 9000:9000  # Native interface
      - 9009:9009  # Interserver HTTP
    ulimits:
      nproc: 65535
      nofile:
        soft: 262144
        hard: 262144
    restart: unless-stopped
    networks:
      - proxynet


volumes:
  postgres:
  clickhouse:

networks:
  proxynet:
    name: proxy
    driver: bridge
